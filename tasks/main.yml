---

### Start code here

- name: "Get package facts"
  package_facts:

- name: "Install Podman"
  dnf:
    package: "podman"
    state: present
  when: ansible_facts.packages['podman'] | length == "absent"

# You need this when running in userspace to keep the service running
- name: "Enable linger"
  command: loginctl enable-linger "{{ ansible_env.USER }}"
  changed_when: false

- name: "create some folders"
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ ansible_env.HOME }}/containers/rocketchat/"
    - "{{ ansible_env.HOME }}/containers/rocketchat/certs/"
    - "{{ ansible_env.HOME }}/containers/rocketchat/conf/"
    - "{{ ansible_env.HOME }}/containers/rocketchat/data/"
    - "{{ ansible_env.HOME }}/containers/rocketchat/nginx-cache/"
    - "{{ ansible_env.HOME }}/containers/rocketchat/nginx-pid/"
    - "{{ ansible_env.HOME }}/containers/rocketchat/uploads/"
    - "{{ ansible_env.HOME }}/containers/rocketchat/www/"

# Create a self signed cert, 
## OBS!! needs community.crypto module

- name: "Create private key (RSA, 4096 bits)"
  community.crypto.openssl_privatekey:
    path: "{{ ansible_env.HOME }}/containers/rocketchat/certs/{{ ansible_hostname }}.key"
    type: RSA
    size: 4096

- name: "Create certificate signing request (CSR) for self-signed certificate"
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ ansible_env.HOME }}/containers/rocketchat/certs/{{ ansible_hostname }}.key"
    common_name: "{{ rocketchat_cert_cn }}"
    organization_name: "{{ rocketchat_cert_ou}}"
  register: csr

- name: "Create self-signed certificate from CSR"
  community.crypto.x509_certificate:
    path: "{{ ansible_env.HOME }}/containers/rocketchat/certs/{{ ansible_hostname }}.crt"
    csr_content: "{{ csr.csr }}"
    privatekey_path: "{{ ansible_env.HOME }}/containers/rocketchat/certs/{{ ansible_hostname }}.key"
    provider: selfsigned

# Proxy settings
- name: "Nginx conf"
  template:
    src: "./templates/nginx.conf.j2"
    dest: "{{ ansible_env.HOME }}/containers/rocketchat/conf/nginx.conf"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: '0644'
  #validate: "nginx -t %s"

# Create a pod
- name: "Create a rocketchat pod"
  containers.podman.podman_pod:
    name: "rocketchat-pod"
    publish:
      - "27017:27017"
      - "3000:3000"
      - "{{ rocketchat_http_port }}:80"
      - "{{ rocketchat_https_port }}:443"

# Deploy a mongodb
- name: "Run Rocketchat Mongodb container"
  containers.podman.podman_container:
    name: "rocketchat-db"
    image: "docker.io/library/mongo"
    pod: "rocketchat-pod"
    command: "mongod --oplogSize 128 --replSet rs0"
    volume:
      - "{{ ansible_env.HOME }}/containers/rocketchat/data:/data/db"
    read_only: "{{ rocketchat_container_read_only }}"
    rm: "{{ rocketchat_container_remove_container }}"
    state: started
  register: mongodb_create

#- name: "Debug mode"
#  debug:
#    msg: "{{ mongodb_create }}"

- name: "Podman exec mongodb init"
  command: "podman exec -ti rocketchat-db mongo --eval 'printjson(rs.initiate())'"
  when: mongodb_create.container.State.Running == true
  register: mongodb_init

- name: "Run Rocketchat container"
  containers.podman.podman_container:
    name: "rocketchat-app"
    image: "docker.io/library/rocket.chat"
    pod: "rocketchat-pod"
    env:
      PORT: "3000"
      ROOT_URL: "http://localhost:3000"
      MONGO_URL: "mongodb://rocketchat-db:27017/rocketchat"
      MONGO_OPLOG_URL: "mongodb://rocketchat-db:27017/local"
    volume:
      - "{{ ansible_env.HOME }}/containers/rocketchat/uploads:/app/uploads"
    requires: "rocketchat-db"
    read_only: "{{ rocketchat_container_read_only }}"
    rm: "{{ rocketchat_container_remove_container }}"
    state: started

- name: "Run Rocketchat Proxy container"
  containers.podman.podman_container:
    name: "rocketchat-proxy"
    image: "docker.io/library/nginx"
    pod: "rocketchat-pod"
    volume:
      - "{{ ansible_env.HOME }}/containers/rocketchat/certs/:/etc/nginx/certs"
      - "{{ ansible_env.HOME }}/containers/rocketchat/nginx-cache:/var/cache/nginx"
      - "{{ ansible_env.HOME }}/containers/rocketchat/nginx-pid:/var/run"
      - "{{ ansible_env.HOME }}/containers/rocketchat/conf/nginx.conf:/etc/nginx/nginx.conf"
    read_only: false
    requires: "rocketchat-app"
    rm: "{{ rocketchat_container_remove_container }}"
    state: started

